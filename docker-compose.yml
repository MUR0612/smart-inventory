version: "3.9"

services:
  mysql:
    image: mysql:5.7
    container_name: inv-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -p${MYSQL_ROOT_PASSWORD} --silent"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7
    container_name: inv-redis
    ports:
      - "6379:6379"

  inventory-service:
    build:
      context: ./inventory-service
    container_name: inv-inventory
    restart: unless-stopped
    environment:
      DB_URL: mysql+pymysql://root:rootpassword@mysql:3306/smart_inventory
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "${INVENTORY_PORT}:8001"

  order-service:
    build:
      context: ./order-service
    container_name: inv-order
    restart: unless-stopped
    environment:
      DB_URL: mysql+pymysql://root:rootpassword@mysql:3306/smart_inventory
      INVENTORY_BASE_URL: http://inventory-service:8001
    depends_on:
      mysql:
        condition: service_healthy
      inventory-service:
        condition: service_started
    ports:
      - "${ORDER_PORT}:8002"

  nginx:
    image: nginx:1.27
    container_name: inv-nginx
    depends_on:
      - inventory-service
      - order-service
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend:/usr/share/nginx/html:ro

volumes:
  mysql-data:
